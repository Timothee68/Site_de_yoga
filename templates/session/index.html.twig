{% extends 'base.html.twig' %}
{% block title %}Réservation{% endblock %}

{% block body %}

	<figure class="figure-stage">
		<img
		src="{{ asset('img/sessionimg.jpg') }}" alt="Image Réservation posutre de yoga" srcset="">
	<figcaption class="figcatption-img-stage">Repos, détente et bien-être seront au rendez-vous</figcaption>
	</figure>

<div class="container">
    <div class="row d-flex justify-content-around ">
        <h1 class="mt-5 mb-5">Réservation</h1>
        <div class="col-6 ">
            <nav class="nav-select-prestation">
                <a class="nav-link dropdown-toggle fs-2 text-md-center" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Categorie</a>
                <ul class="dropdown-menu text-center col-12"> 
                    <div id="myBtnContainer">
                        <li ><a class="menu-tab dropdown-item fs-4" href="{{ path('app_session')}}">All</a></li> 
                        {% for category in categorys  %}
                            {% if category.categoryName == "Stage" %}
                                <li ><a style="display: none;" class="menu-tab dropdown-item fs-4" data-tab="{{category.id}}">{{category}}</a></li> 
                            {% else %}
                                <li ><a style="cursor: pointer;" class="menu-tab dropdown-item fs-4" data-tab="{{category.id}}">{{category}}</a></li> 
                            {% endif %}
                        {% endfor %}
                    </div>
                </ul>
            </nav>
        </div>
    </div>

    <div class="row d-flex justify-content-evenly">
        <div class="col-10 d-flex justify-content-around mt-5 mb-5">
            {# si idCategory est defini et que idcategory n'est pas vide #}
            {% if idCategory is defined and idCategory is not empty %}
                {# pour chaque benefit #}
                {% for benefit in benefits %}
                    {# si idcategory == id de la catégorie appartenant au benefit on affiche les bouttons avec la class show en plus  #}
                    {% if idCategory == benefit.category.id %}
                        <button class="active benefit-btn {{benefit.category.id}} show btn btn-res fs-5" data-category="{{benefit.category.id}}"><a href="{{ path('app_session', {'benefit': benefit.id, 'category': benefit.category.id  }) }} " value="{{benefit}}">{{benefit}}</a>
                    {#sinon pas !  #}
                    {% else %}
                        <button class="benefit-btn {{benefit.category.id}} btn btn-res fs-5" data-category="{{benefit.category.id}}"><a href="{{ path('app_session', {'benefit': benefit.id, 'category': benefit.category.id  }) }} " value="{{benefit}}">{{benefit}}</a>
                    {% endif %}
                {% endfor %}
            {% else %}
                {% for benefit in benefits %}
                    <button class="active benefit-btn {{benefit.category.id}} btn btn-res fs-5" data-category="{{benefit.category.id}}"><a href="{{ path('app_session', {'benefit': benefit.id , 'category': benefit.category.id}) }} " value="{{benefit}}">{{benefit}}</a>
                {% endfor %}
            {% endif %}
        </div>
    </div>
</div>  
<div class="container-fluid">
    <div class="row col-12 justify-content-center">
        
        <div class="col-6">
            <h2 class="text-center">Planning</h2>
            <div class="container mt-5">
                <div id="d1">
                    <div id='calendar'></div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <h5 class="text-end mb-5">
                <i class="fa-solid fa-circle color-green"></i> DISPONIBLE <i class="fa-solid fa-circle color-red"></i> PLEIN</h5>
            {# si on a un id d'une categorie et d'une prestation précise #}
            {% if idCategory is defined and idCategory is not empty %}
                {% set dateNow = date() %}
                {% if sessionsById is not empty  %}
                    {% for sessions in sessionsById  %}  
                        {% for session in sessions %}
                            {% include "session/_showSession.html.twig" %}
                        {% endfor %}
                    {% endfor %}
                {% else %}          
                    <h3>Aucune Session disponible pour les jours a venirs</h3>
                {% endif %} 
            {% else %}
                {# sinon affichage de all session #}
                {% for session in sessions  %}
                    {% set dateNow = date() %}
                    {% if dateNow < session.startTime %}
                    {% include "session/_showSession.html.twig" %}
                    {% endif %}
                {% endfor %}
            {% endif %}
        </div>
    </div>
</div>

<script>
    // on ajoute un evenement d'écoute sur le document charger sur cet page avec une fonction
    document.addEventListener('DOMContentLoaded', function()
    {
        // on selectionne l'élément qui a pour ID 'calendar'
        let calendarEl = document.getElementById('calendar');
        // calendar = nouveau calendrier et calandarEl seras composer de :
        let calendar = new FullCalendar.Calendar(calendarEl, 
        {
            initialView: 'dayGridMonth',    // ou possible de mettre 'listWeek' ou 'dayGridMonth'
            locale: 'fr',   // pour avoir le texte en français
            timeZone: 'Europe/Paris', // time zone de l'europe
            headerToolbar:  {       // modifier la disposition de la toullbar et ajouter des éléments
                start: 'prev,next today', // preve nexte au début 
                center: 'title',        //title au milieu
                end: 'dayGridMonth,timeGridWeek,list'  // a la fin on a choix afficher le mois ou la semaine
            },
            allDaySlot: false, // defini si allday s'affiche ou non 
            slotMinTime: "08:00", // affichage des heure qu'a partir de de 8heures,
            slotMaxTime: "21:00", // affichage des heure jusqu'a 20heures,
            hiddenDays: [ 0, 6 ], // pour masquer dimanche et samedi sur le rendue du calendrier
            nowIndicator: true, // place un trait rouge a l'heure ou l'on se trouve 
            buttonText: {  // permet de redefinir le texte des bouttons 
                today: "Aujourd'hui",  
                week: "Semaine",
                list: "Liste",
                month : "Mois",
            },
            events: {{ datas | raw }},
            eventClick : function(info) 
            { 
                    console.log(info);
                    const modals = document.querySelectorAll(".modal-trigger"); // je selectionne tout les elemement avec la classe .modal-trigger
                    console.log(modals);
                    for(let modal of modals)
                    {  // pour chaque élements récupérer    
                        let id = modal.id; // on récupere la value de chaque éléments qui est l'id de la réservation
                        if(id == info.event.id)
                        { // si l'id de la réservation est strictement égal  a l'id de l'event qui est le meme que celui de la réservation alors 
                                
                                modal.click();  // on ajoute un évenement au clique.
                        }                             
                    }
            }
        });
        calendar.render();
    });
</script>
{% endblock %}
